"""
DateTime
"""
scalar DateTime

type Homepage implements _Document & _Linkable {
  title: String
  tagline: String
  button_link: _Linkable
  button_text: String
  image: Json
  body: [HomepageBody!]
  _meta: Meta!
  _linkType: String
}

union HomepageBody =
    HomepageBodyPitch_cards
  | HomepageBodyText
  | HomepageBodySlice

type HomepageBodyPitch_cards {
  type: String
  label: String
  primary: HomepageBodyPitch_cardsPrimary
  fields: [HomepageBodyPitch_cardsFields!]
}

type HomepageBodyPitch_cardsFields {
  card_title: String
  card_text: Json
  card_icon: _Linkable
}

type HomepageBodyPitch_cardsPrimary {
  pitch_title: String
  pitch_text: Json
  pitch_eyebrow: String
}

type HomepageBodySlice {
  type: String
  label: String
}

type HomepageBodyText {
  type: String
  label: String
  primary: HomepageBodyTextPrimary
}

type HomepageBodyTextPrimary {
  text: Json
}

"""
A connection to a list of items.
"""
type HomepageConnectionConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [HomepageConnectionEdge]
  totalCount: Long!
}

"""
An edge in a connection.
"""
type HomepageConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: Homepage!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

"""
Raw JSON value
"""
scalar Json

type Menu implements _Document & _Linkable {
  title: Json
  _meta: Meta!
  _linkType: String
}

"""
A connection to a list of items.
"""
type MenuConnectionConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [MenuConnectionEdge]
  totalCount: Long!
}

"""
An edge in a connection.
"""
type MenuConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: Menu!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

type Meta {
  """
  The id of the document.
  """
  id: String!

  """
  The uid of the document.
  """
  uid: String

  """
  The type of the document.
  """
  type: String!

  """
  The tags of the document.
  """
  tags: [String!]!

  """
  The language of the document.
  """
  lang: String!

  """
  Alternate languages the document.
  """
  alternateLanguages: [RelatedDocument!]!

  """
  The first publication date of the document.
  """
  firstPublicationDate: DateTime

  """
  The last publication date of the document.
  """
  lastPublicationDate: DateTime
}

type Page implements _Document & _Linkable {
  hero_text: Json
  body: [PageBody!]
  _meta: Meta!
  _linkType: String
}

union PageBody =
    PageBodyHighlight_section
  | PageBodyBanner
  | PageBodyBanner_look
  | PageBodyEditorial_look
  | PageBodyText_section
  | PageBodyImage_slider
  | PageBodyGallery
  | PageBodyVideo

type PageBodyBanner {
  type: String
  label: String
  primary: PageBodyBannerPrimary
}

type PageBodyBannerPrimary {
  title: Json
  link: _Linkable
  image: Json
}

type PageBodyBanner_look {
  type: String
  label: String
  primary: PageBodyBanner_lookPrimary
}

type PageBodyBanner_lookPrimary {
  background_image: Json
  quote: Json
  quote_author: Json
  quote_position: String
  quote_style: String
}

type PageBodyEditorial_look {
  type: String
  label: String
  primary: PageBodyEditorial_lookPrimary
  fields: [PageBodyEditorial_lookFields!]
}

type PageBodyEditorial_lookFields {
  look_link: Json
}

type PageBodyEditorial_lookPrimary {
  title: Json
  text: Json
  image: Json
  text_position: String
}

type PageBodyGallery {
  type: String
  label: String
  fields: [PageBodyGalleryFields!]
}

type PageBodyGalleryFields {
  image: Json
  description: Json
  link: _Linkable
}

type PageBodyHighlight_section {
  type: String
  label: String
  primary: PageBodyHighlight_sectionPrimary
}

type PageBodyHighlight_sectionPrimary {
  image: Json
  title: Json
  description: Json
  button_label: Json
  button_link: _Linkable
}

type PageBodyImage_slider {
  type: String
  label: String
  fields: [PageBodyImage_sliderFields!]
}

type PageBodyImage_sliderFields {
  image: Json
}

type PageBodyText_section {
  type: String
  label: String
  primary: PageBodyText_sectionPrimary
}

type PageBodyText_sectionPrimary {
  text: Json
}

type PageBodyVideo {
  type: String
  label: String
  primary: PageBodyVideoPrimary
}

type PageBodyVideoPrimary {
  embed: Json
}

"""
A connection to a list of items.
"""
type PageConnectionConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [PageConnectionEdge]
  totalCount: Long!
}

"""
An edge in a connection.
"""
type PageConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: Page!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Product implements _Document & _Linkable {
  title: Json
  product_description: Json
  _meta: Meta!
  _linkType: String
}

"""
A connection to a list of items.
"""
type ProductConnectionConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [ProductConnectionEdge]
  totalCount: Long!
}

"""
An edge in a connection.
"""
type ProductConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: Product!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

type Query {
  _allDocuments(
    sortBy: SortDocumentsBy
    id: String
    id_in: [String!]
    uid: String
    uid_in: [String!]
    lang: String
    tags: [String!]
    tags_in: [String!]
    type: String
    type_in: [String!]
    firstPublicationDate: DateTime
    firstPublicationDate_after: DateTime
    firstPublicationDate_before: DateTime
    lastPublicationDate: DateTime
    lastPublicationDate_after: DateTime
    lastPublicationDate_before: DateTime
    fulltext: String
    similar: similar
    before: String
    after: String
    first: Int
    last: Int
  ): _DocumentConnection!
  allHomepages(
    sortBy: SortHomepagey
    id: String
    id_in: [String!]
    uid: String
    uid_in: [String!]
    lang: String
    tags: [String!]
    tags_in: [String!]
    type: String
    type_in: [String!]
    firstPublicationDate: DateTime
    firstPublicationDate_after: DateTime
    firstPublicationDate_before: DateTime
    lastPublicationDate: DateTime
    lastPublicationDate_after: DateTime
    lastPublicationDate_before: DateTime
    fulltext: String
    similar: similar
    where: WhereHomepage
    before: String
    after: String
    first: Int
    last: Int
  ): HomepageConnectionConnection!
  allMenus(
    sortBy: SortMenuy
    id: String
    id_in: [String!]
    uid: String
    uid_in: [String!]
    lang: String
    tags: [String!]
    tags_in: [String!]
    type: String
    type_in: [String!]
    firstPublicationDate: DateTime
    firstPublicationDate_after: DateTime
    firstPublicationDate_before: DateTime
    lastPublicationDate: DateTime
    lastPublicationDate_after: DateTime
    lastPublicationDate_before: DateTime
    fulltext: String
    similar: similar
    where: WhereMenu
    before: String
    after: String
    first: Int
    last: Int
  ): MenuConnectionConnection!
  page(uid: String!, lang: String!): Page
  allPages(
    sortBy: SortPagey
    id: String
    id_in: [String!]
    uid: String
    uid_in: [String!]
    lang: String
    tags: [String!]
    tags_in: [String!]
    type: String
    type_in: [String!]
    firstPublicationDate: DateTime
    firstPublicationDate_after: DateTime
    firstPublicationDate_before: DateTime
    lastPublicationDate: DateTime
    lastPublicationDate_after: DateTime
    lastPublicationDate_before: DateTime
    fulltext: String
    similar: similar
    where: WherePage
    before: String
    after: String
    first: Int
    last: Int
  ): PageConnectionConnection!
  product(uid: String!, lang: String!): Product
  allProducts(
    sortBy: SortProducty
    id: String
    id_in: [String!]
    uid: String
    uid_in: [String!]
    lang: String
    tags: [String!]
    tags_in: [String!]
    type: String
    type_in: [String!]
    firstPublicationDate: DateTime
    firstPublicationDate_after: DateTime
    firstPublicationDate_before: DateTime
    lastPublicationDate: DateTime
    lastPublicationDate_after: DateTime
    lastPublicationDate_before: DateTime
    fulltext: String
    similar: similar
    where: WhereProduct
    before: String
    after: String
    first: Int
    last: Int
  ): ProductConnectionConnection!
}

type RelatedDocument {
  """
  The id of the document.
  """
  id: String!

  """
  The uid of the document.
  """
  uid: String

  """
  The type of the document.
  """
  type: String!

  """
  The language of the document.
  """
  lang: String!
}

enum SortDocumentsBy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
}

enum SortHomepagey {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
  tagline_ASC
  tagline_DESC
  button_text_ASC
  button_text_DESC
}

enum SortMenuy {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
}

enum SortPagey {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  hero_text_ASC
  hero_text_DESC
}

enum SortProducty {
  meta_firstPublicationDate_ASC
  meta_firstPublicationDate_DESC
  meta_lastPublicationDate_ASC
  meta_lastPublicationDate_DESC
  title_ASC
  title_DESC
  product_description_ASC
  product_description_DESC
}

input WhereHomepage {
  title: String
  title_fulltext: String
  tagline: String
  tagline_fulltext: String

  """
  button_link
  """
  button_link: String
  button_text: String
  button_text_fulltext: String
}

input WhereMenu {
  """
  title
  """
  title_fulltext: String
}

input WherePage {
  """
  hero_text
  """
  hero_text_fulltext: String
}

input WhereProduct {
  """
  title
  """
  title_fulltext: String

  """
  product_description
  """
  product_description_fulltext: String
}

"""
A prismic document
"""
interface _Document {
  _meta: Meta!
}

"""
A connection to a list of items.
"""
type _DocumentConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [_DocumentEdge]
  totalCount: Long!
}

"""
An edge in a connection.
"""
type _DocumentEdge {
  """
  The item at the end of the edge.
  """
  node: _Document!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

"""
An external link
"""
type _ExternalLink implements _Linkable {
  url: String!
  target: String
  _linkType: String
}

"""
A linked file
"""
type _FileLink implements _Linkable {
  name: String!
  url: String!
  size: Long!
  _linkType: String
}

"""
A linked image
"""
type _ImageLink implements _Linkable {
  name: String!
  url: String!
  size: Long!
  height: Int!
  width: Int!
  _linkType: String
}

"""
A prismic link
"""
interface _Linkable {
  _linkType: String
}

input similar {
  documentId: String!
  max: Int!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values. Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long
